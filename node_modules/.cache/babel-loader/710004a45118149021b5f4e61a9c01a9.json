{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chuck\\\\Code\\\\NewCode\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveSession.js\";\nimport React from \"react\";\n\nfunction ActiveSession({\n  session,\n  secondsToDuration,\n  focusDuration,\n  breakDuration\n}) {\n  //console.log(session);\n  if (session) {\n    let focusOrBreak = null;\n\n    if (session.label.includes(\"Focusing\")) {\n      focusOrBreak = focusDuration;\n    } else {\n      focusOrBreak = breakDuration;\n    } //console.log(session.timeRemaining / -focusOrBreak);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, session.label, \" for \", secondsToDuration(focusOrBreak), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, secondsToDuration(session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": \"50\" // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: \"0%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    })))));\n  } else {\n    return null;\n  }\n}\n\nexport default ActiveSession;","map":{"version":3,"sources":["C:/Users/Chuck/Code/NewCode/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveSession.js"],"names":["React","ActiveSession","session","secondsToDuration","focusDuration","breakDuration","focusOrBreak","label","includes","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,iBAAV;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAvB,EAAkF;AAC9E;AAEA,MAAIH,OAAJ,EAAY;AAER,QAAII,YAAY,GAAG,IAAnB;;AACC,QAAIJ,OAAO,CAACK,KAAR,CAAcC,QAAd,CAAuB,UAAvB,CAAJ,EAAuC;AACxCF,MAAAA,YAAY,GAAGF,aAAf;AACC,KAFA,MAEM;AACPE,MAAAA,YAAY,GAAGD,aAAf;AACC,KAPO,CAQR;;;AACC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAET;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCH,OAAO,CAACK,KADT,WACqBJ,iBAAiB,CAACG,YAAD,CADtC,aAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEH,iBAAiB,CAACD,OAAO,CAACO,aAAT,CADnB,eANF,CADF,CAFS,eAcT;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAc,IALhB,CAKqB;AALrB;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAdS,CAAR;AA6BJ,GAtCD,MAsCO;AACH,WAAO,IAAP;AACH;AAEJ;;AAED,eAAeV,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction ActiveSession({session, secondsToDuration, focusDuration, breakDuration}){\r\n    //console.log(session);\r\n    \r\n    if (session){\r\n        \r\n        let focusOrBreak = null;\r\n         if (session.label.includes(\"Focusing\")){\r\n        focusOrBreak = focusDuration;\r\n        } else { \r\n        focusOrBreak = breakDuration;\r\n        }\r\n        //console.log(session.timeRemaining / -focusOrBreak);\r\n         return (<div>\r\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n            {session.label} for {secondsToDuration(focusOrBreak)} minutes\r\n            </h2>\r\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n             {secondsToDuration(session.timeRemaining)} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow=\"50\" // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    } else {\r\n        return null;\r\n    }\r\n   \r\n}\r\n\r\nexport default ActiveSession;"]},"metadata":{},"sourceType":"module"}